=============
  ABOUT
=============

css-optimizer is a python utility that converts css class names and ids to simpler names for making the file size smaller and obfuscating your css code
it also converts corresponding html and javascript class references

if your stylesheet starts out looking like this:

.file2 #special {
    font-size: 1.5em;
    color: #F737FF;
}

.file2 #special2 {
    letter-spacing: 0;
}

.box {
    border: 2px solid #aaa;
    -webkit-border-radius: 5px;
    background: #eee;
    padding: 5px;
}

it will be rewritten as

.a #a {
    font-size: 1.5em;
    color: #F737FF;
}

.a #b {
    letter-spacing: 0;
}

.b {
    border: 2px solid #aaa;
    -webkit-border-radius: 5px;
    background: #eee;
    padding: 5px;
}

=============
  ARGUMENTS
=============

REQUIRED:
--views {path/to/views}      html files to rewrite (comma separated list of directories and files)

OPTIONAL:
--css {path/to/css}          css files to rewrite (comma separated list of directories and files)
--js {path/to/js}            js files to rewrite (comma separated list of directories and files)
--framework                  name of js framework to use for selectors (currently only jquery or mootools)
--view-ext {extension}       sets the extension to look for in the view directory (defaults to html)
--ignore {classes,ids}       comma separated list of classes or ids to ignore when rewriting css (ie .sick_class,#sweet_id)
--selectors                  comma separated custom selectors using css selectors
                             for example if you have $.qs("#test .div") this param would be qs
--id-selectors               comma separated id selectors with strings
                             for example if you are using .addId("test") this param would be addId
--class-selectors            comma separated class selectors with strings
                             for example if you have selectClass("my_class") this param would be selectClass
--help                       shows this menu

=============
  EXAMPLES
=============

to update a bunch of stylesheets and views:
cd css-optimizer
./optimize.py --css demo/css --views demo/views

to update a single file with inline styles/javascript:
cd css-optimizer
./optimize.py --views demo/single-file/view-with-inline-styles.html

you can also select specific files:
cd css-optimizer
./optimize.py --css file1.css,file2.css --views view1.html,view2.html

or you can mix and match files and directories
./optimize.py --css /my/css/directory,global.css --views /view/directory1,/view/directory2,/view/directory3,template.html
